Перем Сессия;
Перем АдресСтраницы;
Перем ТаблицаДействий;
Перем НачальнаяСтраница;
Перем ДействиеВыхода Экспорт;
Перем РазмерСтраницы;
Перем ТекстСтраницы;

Процедура ПриСозданииОбъекта(_Сессия, _АдресСтраницы, _НачальнаяСтраница=Ложь)
	
	АдресСтраницы		= _АдресСтраницы;
	Сессия				= _Сессия;
	НачальнаяСтраница	= _НачальнаяСтраница;

	ИнициализацияТаблицыДействий();
	
	ПросмотрСтраницы();
	
КонецПроцедуры

Процедура ИнициализацияТаблицыДействий()
	
	ТаблицаДействий = Новый ТаблицаЗначений();
	ТаблицаДействий.Колонки.Добавить("КодОперации");
	ТаблицаДействий.Колонки.Добавить("Адрес");
	ТаблицаДействий.Колонки.Добавить("Описание");
	ТаблицаДействий.Колонки.Добавить("Действие");
	ТаблицаДействий.Колонки.Добавить("Параметры");
	
КонецПроцедуры

Процедура ПросмотрСтраницы()
	
	Сообщить("Адрес: " + АдресСтраницы);

	Результат = Сессия.ПолучитьСодержимое(АдресСтраницы);
	Если Результат.ЭтоФайл Тогда
		ДействиеВыхода = "Назад";
		Возврат;
	КонецЕсли;

	ТекстСтраницы = Результат.ТекстСтраницы;

	ВывестиПорцию();
	
КонецПроцедуры

Процедура ВывестиПорцию(Старт=0) Экспорт
	
	ЗаполнитьТаблицу(Старт);
	
	ВывестиТаблицу();
	
	ОжидатьВыбор();

КонецПроцедуры

Процедура ЗаполнитьТаблицу(Старт)
	
	ТаблицаДействий.Очистить();
	
	ШаблоныВыражений = Новый Массив;
	ШаблоныВыражений.Добавить( "<td class=""versionColumn"">\s*<a href=""(.+)"">\s*(.+)\s*</a>\s*"
							 + "</td>\s*<td class=""dateColumn"">\s*(.+)\s*</td>");					// перечень версии	
	ШаблоныВыражений.Добавить("<div class=""formLine"">\s*?<a href=""(.+?)"">(.+?)</a>\s*</div>");	// перечень дистрибутивов и доп материалов
	ШаблоныВыражений.Добавить("<a href=""(.+?)"">(Скачать.+?)</a>");								// перечень ссылок на скачивание
	ШаблоныВыражений.Добавить("<a href=""(.+?)"">(.+?)</a>");										// любые ссылки
	
	Для Каждого Выражение Из ШаблоныВыражений Цикл
		Совпадения = Служебный.СовпаденияВТексте(ТекстСтраницы, Выражение);
		Если Совпадения.Количество() Тогда
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Нумератор = 0;
	СтрокаПредыдущие = Ложь;

	Для Каждого Совпадение Из Совпадения Цикл
		
		Нумератор = Нумератор + 1;
		Если Старт > Нумератор Тогда
			Если НЕ СтрокаПредыдущие Тогда
				СтрокаПредыдущие = Истина;
				стрДействие = ТаблицаДействий.Добавить();
				стрДействие.КодОперации = "Q";
				стрДействие.Описание = СтрШаблон("<< Предыдущие (%1)", РазмерСтраницы);
				стрДействие.Действие = "ВывестиПорцию";				
				стрДействие.Параметры = Служебный.ВМассиве(Старт - РазмерСтраницы);	
			КонецЕсли;
			Продолжить;
		КонецЕсли;

		Группы = Совпадение.Группы;
		Если Группы.Количество() < 2 Тогда
			Продолжить;
		КонецЕсли;
		
		Описание = Новый Массив;
		Для инд = 2 По Группы.Количество() - 1 Цикл
			Описание.Добавить(Группы[инд].Значение);
		КонецЦикла;
		
		стрДействие = ТаблицаДействий.Добавить();
		стрДействие.КодОперации = Строка(Нумератор);
		стрДействие.Адрес = Группы[1].Значение;
		стрДействие.Описание = СтрСоединить(Описание, " / ");
		стрДействие.Действие = "ПереходНаСтраницу";
		стрДействие.Параметры = Служебный.ВМассиве(стрДействие.Адрес);
	
		Если (ТаблицаДействий.Количество() - СтрокаПредыдущие) >= РазмерСтраницы Тогда
			стрДействие = ТаблицаДействий.Добавить();
			стрДействие.КодОперации = "W";
			СледующаяПорция = Мин(РазмерСтраницы, Совпадения.Количество()-Нумератор);
			стрДействие.Описание = СтрШаблон("Следующие (%1) >>", СледующаяПорция);
			стрДействие.Действие = "ВывестиПорцию";				
			стрДействие.Параметры = Служебный.ВМассиве(Нумератор + 1);
			Прервать;	
		КонецЕсли;
			
	КонецЦикла;

	НештатнаяСитуация = Ложь;
	Если Совпадения.Количество() = 0 Тогда
		ВыражениеОшибка = "<div class=""baseMessage"">\s*(.+)\s*</div>"; // ошибка сервера
		Совпадения = Служебный.СовпаденияВТексте(ТекстСтраницы, ВыражениеОшибка);
		Если Совпадения.Количество() Тогда
			Группы = Совпадения[0].Группы;
			Если Группы.Количество() > 1 Тогда
				НештатнаяСитуация = Истина;
				Сообщить(Группы[1].Значение);
			КонецЕсли;			
		КонецЕсли;			
	КонецЕсли;
		
	стрДействие = ТаблицаДействий.Добавить();
	стрДействие.КодОперации = "Z";
	Если НачальнаяСтраница Или НештатнаяСитуация Тогда
		стрДействие.Описание = "Завершить работу";
		стрДействие.Действие = "Выход";
	Иначе
		стрДействие.Описание = "Назад";
		стрДействие.Действие = "Назад";
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиТаблицу()
	
	Для Каждого стрДействие Из ТаблицаДействий Цикл
		Сообщить(СтрШаблон("[ %1 ] - %2", стрДействие.КодОперации, стрДействие.Описание));	
	КонецЦикла;
	
КонецПроцедуры

Процедура ОжидатьВыбор(Сообщение="Выберите действие:")
	
	ВыбранныйКод = "";
	Сообщить(Сообщение);
	
	DebugInput = ПолучитьПеременнуюСреды("DebugInput");
	Если ЗначениеЗаполнено(DebugInput) Тогда
		ВыбранныйКод = DebugInput;
	Иначе
		ВвестиСтроку(ВыбранныйКод);
	КонецЕсли;
	
	ВыбраннаяСтрока = ТаблицаДействий.Найти(ВРег(ВыбранныйКод), "КодОперации");
	Если ВыбраннаяСтрока = Неопределено Тогда
		ОжидатьВыбор("Не найдена операция. Повторите выбор:");
	КонецЕсли;
	
	Рефлектор = Новый Рефлектор();
	Рефлектор.ВызватьМетод(ЭтотОбъект, ВыбраннаяСтрока.Действие, ВыбраннаяСтрока.Параметры);

КонецПроцедуры

Процедура Назад() Экспорт
	ДействиеВыхода = "Назад";
КонецПроцедуры

Процедура Выход() Экспорт
	ДействиеВыхода = "Выход";
КонецПроцедуры

Процедура ПереходНаСтраницу(Адрес) Экспорт
	
	ОбзревательСледующейСтраницы = Новый ОбозревательСтраницы(Сессия, Адрес);
	Если ОбзревательСледующейСтраницы.ДействиеВыхода = "Назад" Тогда
		ПросмотрСтраницы();
	КонецЕсли;
	
КонецПроцедуры

РазмерСтраницы = 15;